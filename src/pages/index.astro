---
import { getCollection, getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../components/layout/BaseLayout.astro";
import Container from "../components/ui/Container.astro";
import ProjectCard from "../components/ui/ProjectCard.astro";

const siteConfig = await getEntry("site", "home");
if (!siteConfig) {
  throw new Error("Site configuration not found");
}

const site = siteConfig.data;

const formatDate = (date: Date | undefined) => {
  if (!date) return "";
  return date.toLocaleDateString("en-US", {
    month: "short",
    day: "numeric",
  });
};

const experiences = await getCollection("experience");
const sortedExperiences = experiences.sort(
  (a: CollectionEntry<"experience">, b: CollectionEntry<"experience">) =>
    b.data.startDate.getTime() - a.data.startDate.getTime(),
);

const projects = await getCollection("projects");
const featuredProjects = projects
  .filter((project: CollectionEntry<"projects">) => project.data.featured)
  .slice(0, 3);

const otherProjects = projects
  .filter((project: CollectionEntry<"projects">) => !project.data.featured)
  .slice(0, 3);
---

<BaseLayout title={`${site.name} - Portfolio`} description={site.introduction}>
  <Container>
    <section class="hero">
      <h1>{site.name}</h1>
      <p class="subtitle">{site.title}</p>
      <p class="introduction">{site.introduction}</p>
      {
        site.socialLinks && (
          <div class="social-links">
            {site.socialLinks.map(({ platform, url }) => (
              <a href={url} target="_blank" rel="noopener noreferrer">
                {platform}
              </a>
            ))}
          </div>
        )
      }
    </section>

    <section class="section">
      <div class="section-header">
        <h2>{site.sections.projects.title}</h2>
        <a href="/projects">{site.sections.projects.viewAllText}</a>
      </div>
      <div class="projects-grid">
        {
          featuredProjects.map((project) => (
            <ProjectCard
              title={project.data.title}
              description={project.data.description}
              imagePath={project.data.imagePath || "/api/placeholder/400/300"}
              url={`/projects/${project.id}`}
              techs={project.data.techs}
              githubUrl={project.data.githubUrl || "https://github.com/kkyouma"}
            />
          ))
        }
      </div>
    </section>

    <section class="section">
      <div class="section-header">
        <h2>{site.sections.experience.title}</h2>
        <a href="/experience">{site.sections.experience.viewAllText}</a>
      </div>
      <div class="content-list">
        {
          sortedExperiences.slice(0, 2).map((exp) => (
            <article>
              <div class="title-row">
                <div class="company-info">
                  <img src={exp.data.logo} alt="" class="company-logo" />
                  <span>{exp.data.title}</span>
                </div>
                <time>
                  {formatDate(exp.data.startDate)} -{" "}
                  {exp.data.current ? "Present" : formatDate(exp.data.endDate)}
                </time>
              </div>
              <p class="muted-text">{exp.data.description}</p>
            </article>
          ))
        }
      </div>
    </section>
  </Container>
</BaseLayout>

<style>
  main {
    width: 100%;
    max-width: 640px;
    margin: 0 auto;
    padding: 2rem 0;
  }

  .hero {
    padding: 4rem 0;
  }

  .introduction {
    margin: 1.5rem 0;
    opacity: 0.9;
  }

  .section {
    margin: 4rem 0;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    margin-bottom: 2rem;
    opacity: 0.7;
  }

  .title-row {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    gap: 1rem;
    font-size: var(--text-sm);
  }

  .company-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .company-logo {
    width: 1.5rem;
    height: 1.5rem;
    object-fit: contain;
  }

  time {
    font-size: var(--text-xs);
    opacity: 0.5;
    white-space: nowrap;
  }

  .tags {
    display: flex;
    gap: 0.75rem;
    margin-top: 0.5rem;
  }

  .tags span {
    font-size: var(--text-xs);
    opacity: 0.5;
  }

  .social-links {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
    opacity: 0.7;
  }

  @media (max-width: 640px) {
    main {
      padding: 1rem 0;
    }

    .hero {
      padding: 3rem 0;
    }

    .container {
      padding: 0 1rem;
    }
  }
</style>
