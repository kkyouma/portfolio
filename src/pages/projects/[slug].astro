---
import { getCollection, render } from "astro:content";
import type { GetStaticPaths } from "astro";
import BaseLayout from "../../components/layout/BaseLayout.astro";

export const getStaticPaths = (async () => {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.id },
    props: { project },
  }));
}) satisfies GetStaticPaths;

const { project } = Astro.props;
const { Content } = await render(project);

const formatDate = (date: Date) => {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};

const getProjectImagePath = (projectId: string): string => {
  return `/images/projects/${projectId}.png`;
};
---

<BaseLayout title={project.data.title} description={project.data.description}>
  <main>
    <article class="project">
      <header>
        <h1>{project.data.title}</h1>
        <p>{project.data.description}</p>
        {
          project.data.techs && (
            <div class="technologies">
              {project.data.techs.map((tech: string) => (
                <span class="tech-tag">{tech}</span>
              ))}
            </div>
          )
        }
        <div class="links-section">
          <span class={`feature ${project.data.featured ? true : false}`}>
            {project.data.featured ? "Stakeholder Project" : "Personal Project"}
          </span>
          <div>
            <a class="button secondary category-link" href={project.data.url}
              >Preview</a
            >
            <a
              href={project.data.githubUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="button primary category-link"
            >
              View on GitHub
            </a>
          </div>
        </div>
        <div class="project-images">
          <div class="image-container">
            <picture>
              <img src={project.data.imagePath} alt={project.data.title} />
            </picture>
          </div>
        </div>
      </header>
      <div class="content">
        <Content />
      </div>
    </article>
  </main>
</BaseLayout>

<style>
  main {
    width: 100%;
    margin: 0 auto;
    padding: 0rem 1.5rem;
  }

  .project {
    margin-top: 0rem;
  }

  header {
    margin-bottom: 2rem;
  }

  .project-images {
    display: grid;
    gap: 2rem;
    margin: 2rem 0;
    width: 100%;
    height: auto;
    margin-bottom: 1.5rem;
    border-radius: 8px;
    overflow: hidden;
  }

  span.feature {
    font-size: 0.8rem;
    font-weight: 500;
  }

  .project-images img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  .image-container {
    border: 1px solid var(--border-color);
    border-radius: 0.75rem;
    overflow: hidden;
  }

  .metadata {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
  }

  time {
    color: var(--text-muted);
    font-size: var(--text-sm);
  }

  .category-link {
    color: var(--text-muted);
    padding: 0.3rem 0.8rem;
    border-radius: 4px;
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .category-link:hover {
    background-color: var(--hover-bg);
  }

  .primary {
    border: solid 1px var(--border-color);
  }

  .links-section {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 2rem 0;
  }

  h1 {
    margin-top: 0.5rem;
    margin-bottom: 1rem;
  }

  .technologies {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin-bottom: 1.5rem;
  }

  .tech-tag {
    font-size: var(--text-xs);
    color: var(--text-muted);
    /* background-color: var(--tag-bg, rgba(255, 255, 255, 0.1)); */
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    border: 1px solid var(--border-color);
  }

  .content {
    line-height: 1.7;
  }

  @media (max-width: 768px) {
    main {
      padding: 1rem;
    }

    .metadata {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
  th,
  td {
    padding: 2px 5px; /* Adjust these values: 2px top/bottom, 5px left/right */
    /* You might also want to adjust line-height if needed */
    line-height: 1.2;
  }
</style>
